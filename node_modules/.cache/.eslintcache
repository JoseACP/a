[{"/Users/pepe/Documents/signin/src/index.js":"1","/Users/pepe/Documents/signin/src/reportWebVitals.js":"2","/Users/pepe/Documents/signin/src/pages/Home.js":"3","/Users/pepe/Documents/signin/src/auth/Login.js":"4","/Users/pepe/Documents/signin/src/auth/Components.js":"5","/Users/pepe/Documents/signin/src/panel.js":"6","/Users/pepe/Documents/signin/src/components/Sidebar.js":"7","/Users/pepe/Documents/signin/src/pages/Reports.js":"8","/Users/pepe/Documents/signin/src/pages/Users.js":"9","/Users/pepe/Documents/signin/src/App.js":"10"},{"size":1050,"mtime":1712871256703,"results":"11","hashOfConfig":"12"},{"size":385,"mtime":1712773260290,"results":"13","hashOfConfig":"12"},{"size":5003,"mtime":1712959223449,"results":"14","hashOfConfig":"12"},{"size":2568,"mtime":1713049181664,"results":"15","hashOfConfig":"12"},{"size":3847,"mtime":1712813681833,"results":"16","hashOfConfig":"12"},{"size":403,"mtime":1712809105742,"results":"17","hashOfConfig":"12"},{"size":485,"mtime":1712934403879,"results":"18","hashOfConfig":"12"},{"size":3275,"mtime":1712960313745,"results":"19","hashOfConfig":"12"},{"size":3154,"mtime":1712960207900,"results":"20","hashOfConfig":"12"},{"size":307,"mtime":1712924561265,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"g3y2oc",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pepe/Documents/signin/src/index.js",["56"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Login from './auth/Login';\nimport Home from './pages/Home';\nimport Users from './pages/Users';\nimport Reports from './pages/Reports';\n\n\n\nconst router = createBrowserRouter ([\n  {\n    path: '/',\n    element: <Login/>,\n    errorElement: <Login/>,\n  },\n  {\n    path: '/Home',\n    element: <Home/>\n  },\n  {\n    path: '/Users',\n    element: <Users/>\n  },\n  {\n    path: '/Reports',\n    element: <Reports/>\n  }\n]);\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router}/>\n    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","/Users/pepe/Documents/signin/src/reportWebVitals.js",[],[],"/Users/pepe/Documents/signin/src/pages/Home.js",["57","58","59","60"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRightFromBracket, faHouse, faUser, faFile } from '@fortawesome/free-solid-svg-icons';\n\nimport \"./styles.css\"\n\nconst Home = () => {\n  const token = localStorage.getItem('token');\n  console.log(token);\n\n  // Estado para almacenar la lista de usuarios\n  const [users, setUsers] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  // Función para obtener los usuarios desde el API\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(\n        'https://ujed-api.onrender.com/api/users?order_by=created_at&order=desc&limit=5',\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setUsers(response.data.slice(0, 4));\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n    }\n  };\n\n  const fetchReports = async () => {\n    try {\n      const response = await axios.get(\n        'https://ujed-api.onrender.com/api/reports?limit=10&offset=0&order=asc',\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setReports(response.data.slice(0, 3));\n    } catch (error) {\n      console.error('Error al obtener reportes:', error);\n    }\n  };\n\n  // Llamamos a fetchUsers y fetchReports al cargar el componente\n  useEffect(() => {\n    fetchUsers();\n    fetchReports();\n  }, []); // La lista de depend\n\n\n\n  // Llamamos a fetchUsers al cargar el componente\n\n  return (\n    <div className={'dashboard-container'}>\n      <div className=\"sidebar\">\n        <img className='logo' src='https://lh5.googleusercontent.com/proxy/DG7wQT5MyXoK68d6vCp5s2V7Lxm5_-mDz7j8Ym29tgxP9gY70qy4JoG4tcRYwIe72foKCfEF'/>  \n        <nav>\n          <ul>\n            <li>\n              <Link to={'/Home'}><FontAwesomeIcon icon={faHouse} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Users'}><FontAwesomeIcon icon={faUser} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Reports'}><FontAwesomeIcon icon={faFile} className=\"burger-icon\"/></Link>\n            </li>\n            <li className='cerrar'>\n              <Link to={'/'}><FontAwesomeIcon icon={faRightFromBracket} className=\"burger-icon\"/></Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n     \n    <h1 className='main-title'>Dashboard</h1>\n    <div className=\"user-list\">\n      <h2 className='title'>Lista de Usuarios</h2>\n      <div className=\"table-container\">\n      <table>\n          <thead className='title-t'>\n            <tr className='header'>\n              <th>ID</th>\n              <th>Nombre</th>\n              <th>Apellido</th>\n              <th>Email</th>\n              <th>Roles</th>\n              <th>Creado</th>\n              <th>Actualizado</th>\n            </tr>\n          </thead>\n          <tbody className='body'>\n            {users.map(user => (\n              <tr key={user.id}>\n                <td>{user.id}</td>\n                <td>{user.name}</td>\n                <td>{user.last_name}</td>\n                <td>{user.email}</td>\n                <td>{user.roles.join(', ')}</td>\n                <td>{new Date(user.created_at).toLocaleString()}</td>\n                <td>{new Date(user.updated_at).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div className=\"report-list\">\n      <h2 className='title' >Lista de Reportes</h2>\n     <div className=\"table-container\">\n     <table>\n        <thead className='title-t'>\n          <tr>\n            <th>ID</th>\n            <th>Título</th>\n            <th>Descripción</th>\n            <th>Estado</th>\n            <th>Ubicación</th>\n            <th>Usuario</th>\n            <th>Imágenes</th>\n            <th>Creado</th>\n            <th>Actualizado</th>\n          </tr>\n        </thead>\n        <tbody className='body'>\n          {reports.map(report => (\n            <tr key={report.id}>\n              <td>{report.id}</td>\n              <td>{report.title}</td>\n              <td>{report.description}</td>\n              <td>{report.status}</td>\n              <td>{report.location}</td>\n              <td>{report.user.name}</td>\n              <td>\n                  {/* Mostrar solo la primera imagen del reporte */}\n                  {report.images.length > 0 && (\n                    <img src={report.images[0].url} alt=\"Reporte\" style={{ maxWidth: '100px', maxHeight: '100px' }} />\n                  )}\n                </td>\n              <td>{new Date(report.created_at).toLocaleString()}</td>\n              <td>{new Date(report.updated_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n     </div>\n    </div>\n  </div>\n);\n};\n\nexport default Home;\n","/Users/pepe/Documents/signin/src/auth/Login.js",["61"],[],"/Users/pepe/Documents/signin/src/auth/Components.js",[],[],"/Users/pepe/Documents/signin/src/panel.js",[],[],"/Users/pepe/Documents/signin/src/components/Sidebar.js",[],[],"/Users/pepe/Documents/signin/src/pages/Reports.js",["62","63"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./styles.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRightFromBracket, faHouse, faUser, faFile } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Reports() {\n  const token = localStorage.getItem('token');\n  console.log(token);\n\n\n  const [reports, setReports] = useState([]);\n\n  const fetchReports = async () => {\n    try {\n      const response = await axios.get(\n        'https://ujed-api.onrender.com/api/reports?limit=10&offset=0&order=asc',\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setReports(response.data);\n    } catch (error) {\n      console.error('Error al obtener reportes:', error);\n    }\n  };\n\n  // Llamamos a fetchUsers y fetchReports al cargar el componente\n  useEffect(() => {\n    fetchReports();\n  }, []); // La lista de depend\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        <img className='logo' src='https://lh5.googleusercontent.com/proxy/DG7wQT5MyXoK68d6vCp5s2V7Lxm5_-mDz7j8Ym29tgxP9gY70qy4JoG4tcRYwIe72foKCfEF'/>  \n        <nav>\n          <ul>\n            <li>\n              <Link to={'/Home'}><FontAwesomeIcon icon={faHouse} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Users'}><FontAwesomeIcon icon={faUser} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Reports'}><FontAwesomeIcon icon={faFile} className=\"burger-icon\"/></Link>\n            </li>\n            <li className='cerrar'>\n              <Link to={'/'}><FontAwesomeIcon icon={faRightFromBracket} className=\"burger-icon\"/></Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n       <h1 className='main-title'>Reportes</h1>\n       <div className=\"report-list\">\n      <h2 className='title' >Lista de Reportes</h2>\n     <div className=\"table-container\">\n     <table>\n        <thead className='title-t'>\n          <tr>\n            <th>ID</th>\n            <th>Título</th>\n            <th>Descripción</th>\n            <th>Estado</th>\n            <th>Ubicación</th>\n            <th>Usuario</th>\n            <th>Imágenes</th>\n            <th>Creado</th>\n            <th>Actualizado</th>\n          </tr>\n        </thead>\n        <tbody className='body'>\n          {reports.map(report => (\n            <tr key={report.id}>\n              <td>{report.id}</td>\n              <td>{report.title}</td>\n              <td>{report.description}</td>\n              <td>{report.status}</td>\n              <td>{report.location}</td>\n              <td>{report.user.name}</td>\n              <td>\n                  {/* Mostrar solo la primera imagen del reporte */}\n                  {report.images.length > 0 && (\n                    <img src={report.images[0].url} alt=\"Reporte\" style={{ maxWidth: '100px', maxHeight: '100px' }} />\n                  )}\n                </td>\n              <td>{new Date(report.created_at).toLocaleString()}</td>\n              <td>{new Date(report.updated_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n     </div>\n    </div>\n    </div>\n\n  )\n}\n\nexport default Reports\n","/Users/pepe/Documents/signin/src/pages/Users.js",["64","65"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./styles.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRightFromBracket, faHouse, faUser, faFile } from '@fortawesome/free-solid-svg-icons';\n\nfunction Users() {\n    const token = localStorage.getItem('token');\n    console.log(token);\n  \n    // Estado para almacenar la lista de usuarios\n    const [users, setUsers] = useState([]);\n\n    const fetchUsers = async () => {\n        try {\n          const response = await axios.get(\n            'https://ujed-api.onrender.com/api/users?order_by=created_at&order=desc&limit=5',\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          );\n          setUsers(response.data);\n        } catch (error) {\n          console.error('Error al obtener usuarios:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchUsers();\n      }, []); // La lista de depend\n    \n      return (\n        <div className=\"dashboard-container\">\n              <div className=\"sidebar\">\n        <img className='logo' src='https://lh5.googleusercontent.com/proxy/DG7wQT5MyXoK68d6vCp5s2V7Lxm5_-mDz7j8Ym29tgxP9gY70qy4JoG4tcRYwIe72foKCfEF'/>  \n        <nav>\n          <ul>\n            <li>\n              <Link to={'/Home'}><FontAwesomeIcon icon={faHouse} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Users'}><FontAwesomeIcon icon={faUser} className=\"burger-icon\"/></Link>\n            </li>\n            <li>\n              <Link to={'/Reports'}><FontAwesomeIcon icon={faFile} className=\"burger-icon\"/></Link>\n            </li>\n            <li className='cerrar'>\n              <Link to={'/'}><FontAwesomeIcon icon={faRightFromBracket} className=\"burger-icon\"/></Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n        <h1 className='main-title'>Usuarios</h1>\n        <div className=\"user-list\">\n          <h2 className='title'>Lista de Usuarios</h2>\n          <div className=\"table-container\">\n          <table>\n              <thead className='title-t'>\n                <tr className='header'>\n                  <th>ID</th>\n                  <th>Nombre</th>\n                  <th>Apellido</th>\n                  <th>Email</th>\n                  <th>Roles</th>\n                  <th>Creado</th>\n                  <th>Actualizado</th>\n                </tr>\n              </thead>\n              <tbody className='body'>\n                {users.map(user => (\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.last_name}</td>\n                    <td>{user.email}</td>\n                    <td>{user.roles.join(', ')}</td>\n                    <td>{new Date(user.created_at).toLocaleString()}</td>\n                    <td>{new Date(user.updated_at).toLocaleString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n    };\n    \nexport default Users\n","/Users/pepe/Documents/signin/src/App.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":15},{"ruleId":"66","severity":1,"message":"70","line":16,"column":10,"nodeType":"68","messageId":"69","endLine":16,"endColumn":21},{"ruleId":"66","severity":1,"message":"71","line":16,"column":23,"nodeType":"68","messageId":"69","endLine":16,"endColumn":37},{"ruleId":"72","severity":1,"message":"73","line":55,"column":6,"nodeType":"74","endLine":55,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":64,"column":9,"nodeType":"78","endLine":64,"endColumn":151},{"ruleId":"79","severity":1,"message":"80","line":41,"column":9,"nodeType":"78","messageId":"81","endLine":41,"endColumn":26},{"ruleId":"72","severity":1,"message":"82","line":35,"column":6,"nodeType":"74","endLine":35,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":40,"column":9,"nodeType":"78","endLine":40,"endColumn":151},{"ruleId":"72","severity":1,"message":"84","line":33,"column":10,"nodeType":"74","endLine":33,"endColumn":12,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"77","line":38,"column":9,"nodeType":"78","endLine":38,"endColumn":151},"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'showSidebar' is assigned a value but never used.","'setShowSidebar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchReports' and 'fetchUsers'. Either include them or remove the dependency array.","ArrayExpression",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component body must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","React Hook useEffect has a missing dependency: 'fetchReports'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchReports, fetchUsers]",{"range":"95","text":"96"},"Update the dependencies array to be: [fetchReports]",{"range":"97","text":"98"},"Update the dependencies array to be: [fetchUsers]",{"range":"99","text":"100"},[1605,1607],"[fetchReports, fetchUsers]",[959,961],"[fetchReports]",[1012,1014],"[fetchUsers]"]